<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserMapper">
    <resultMap type="User" id="usermap">
        <id column="id" property="id"/>
        <result column="user_name" property="userName"/>
        <result column="password" property="password"/>
        <result column="mobile" property="mobile"/>
        <result column="sex" property="sex"/>
        <result column="status" property="status"/>
    </resultMap>

    <!--需要翻页的,使用子查询的方式解决mybatis底层拦截器返回总行数不对应的问题-->
    <resultMap id="pageMap" type="com.example.demo.dto.UserDTO">
        <id column="id" property="id"/>
        <result column="user_name" property="userName"/>
        <result column="password" property="password"/>
        <result column="mobile" property="mobile"/>
        <result column="sex" property="sex"/>
        <result column="status" property="status"/>

        <collection property="orders" ofType="com.example.demo.entity.Order" column="id" select="items">
            <result column="id" property="id"/>
            <result column="uid" property="uid"/>
            <result column="goods_name" property="goodsName"/>
            <result column="price" property="price"/>
        </collection>
    </resultMap>

    <sql id="columnSet">a.id,a.user_name,a.password,a.mobile,a.sex,a.status</sql>

    <select id="listPage" resultMap="pageMap">
        select
        <include refid="columnSet"/>
        from pn_user a
    </select>

    <!-- 子查询-->
    <select id="items" resultType="com.example.demo.entity.Order" parameterType="java.lang.Integer">
        select id,uid,goods_name,price
        from pn_order
        where uid = #{uid}
    </select>

    <select id="get" resultMap="usermap" parameterType="java.lang.Integer">
        select
        <include refid="columnSet"/>
        from pn_user a
        where a.id = #{id} and a.status='1'
    </select>

    <select id="getByUserName" resultMap="usermap" parameterType="java.lang.String">
        select
        <include refid="columnSet"/>
        from pn_user a
        where a.user_name = #{userName} and a.status='1'
    </select>

    <select id="getByMobile" resultMap="usermap" parameterType="java.lang.String">
        select
        <include refid="columnSet"/>
        from pn_user a
        where a.mobile = #{mobile} and a.status='1'
    </select>

    <select id="list" resultMap="usermap" parameterType="java.util.Map">
        select
        <include refid="columnSet"/>
        from pn_user a
        <where>
            <if test="userName != null and userName != ''">
                a.user_name like '%${userName}%'
            </if>
            <if test="sex != null and sex != ''">
                and a.sex = #{sex}
            </if>
        </where>
        order by a.id desc
    </select>

    <insert id="save" parameterType="User">
		insert into pn_user
		(user_name,password,sex) values (#{userName}, #{password}, #{sex})
	</insert>

    <update id="update" parameterType="User">
        update pn_user
        <trim prefix="set" suffixOverrides=",">
            <if test="userName!=null">user_name=#{userName},</if>
            <if test="password!=null">password=#{password},</if>
            <if test="sex!=null">sex=#{sex},</if>
        </trim>
        where id=#{id}
    </update>

    <delete id="remove" parameterType="java.lang.Integer">
		delete from pn_user where id = #{id}
	</delete>
</mapper>